name: check

on:
  pull_request: {}
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        golangci: ['1.53']
        go: ['1.20']
    name: golangci-lint v${{ matrix.golangci }}, go v${{ matrix.go }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ matrix.go }}'
      - uses: golangci/golangci-lint-action@v3
        with:
          version: 'v${{ matrix.golangci }}'
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.20']
    name: go v${{ matrix.go }} test
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ matrix.go }}'
      - run: go test -v ./...
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.20']
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v4
        with:
          go-version: '${{ matrix.go }}'
      - uses: goreleaser/goreleaser-action@v4
        with:
          version: '~> 1.18'
          args: build --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Check the linux build version
        run: ./dist/etc-hosts-proxy_linux_amd64_v1/etc-hosts-proxy --version
